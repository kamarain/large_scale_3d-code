#!/bin/sh
# This function generates stereo pairs for examples in the given
# training list file using the view mode 2 of "render_3d_object"
# - the training list file should containg one object per line:
#
#  <wavefront_obj_file_full_path> <texture_png_file_full_path> <obj_name>
#
# <obj_name> will be used to name the output files
# Usage: prompt:~>source make_train_stereo_pairs.sh <train_obj_file> <output_dir>
# Default <output_dir> is "TEMPWORK" (you can also use symlink to redirect)

tempwork="TEMPWORK"
defkitlutconfig="kit-lut_EAZ_5_nozoom"
render_bin="../../build/bin/render_stereo_pair"

echo "Possible ready-made configurations: "
echo "$defkitlutconfig (Default)"
echo "kit-lut_EAZ_10_nozoom"
echo "kit-lut_EAZ_20_nozoom"
echo "kit-lut_EAZ_30_nozoom"
echo "kit-lut_EAZ_40_nozoom"

if [ $# -eq 0 ]; then
    echo "Not enough input arguments!";
    echo "Usage: source make_test_stereo_pairs.sh <train_obj_file> [<tempwork_dir>] [<kitlutconfig>]";
    echo " Example: source scripts/make_test_stereo_pairs.sh config/kit_5k_tex_first_12.txt kit-lut_EAZ_5_nozoom";
    return 1;
fi;

if [ $# -eq 1 ]; then
    kitlutconfiguration=${defkitlutconfig}; # default configuration
    tempwork_dir=${tempwork%/}; # removes last slash if exists
    echo "==> Using default temporary work directory " $tempwork_dir;
    echo "==> Using default KIT-LUT configuration " $kitlutconfig;
fi;

if [ $# -eq 2 ]; then
    kitlutconfiguration=${2}; # given configuration
    tempwork_dir=${tempwork%/}; # removes last slash if exists
    echo "==> Using default temporary work directory " $tempwork_dir;
fi;

if [ $# -eq 3 ]; then
    kitlutconfiguration=${2}; # given configuration
    tempwork_dir=${3%/}; # given temp work, removes last slash if exists
fi;

trainname=`basename $1`;
trainname=`echo $trainname | sed 's/\(.*\)\..*/\1/'`;

if [[ "$kitlutconfiguration" == "kit-lut_EAZ_5_nozoom" ]]; then
    echo "Configuration: $kitlutconfiguration"
    elevation="-5 0 5 nan nan";
    azimuth="-5 0 5 nan nan";
    zoom="1.0 nan nan nan nan";
    listfile=$trainname"_EAZ_05_nozoom_test_set.txt";
elif [[ "$kitlutconfiguration" == "kit-lut_EAZ_10_nozoom" ]]; then
    echo "Configuration: $kitlutconfiguration"
    elevation="-10 0 10 nan nan";
    azimuth="-10 0 10 nan nan";
    zoom="1.0 nan nan nan nan";
    listfile=$trainname"_EAZ_10_nozoom_test_set.txt";
elif [[ "$kitlutconfiguration" == "kit-lut_EAZ_20_nozoom" ]]; then
    echo "Configuration: $kitlutconfiguration"
    elevation="-20 0 20 nan nan";
    azimuth="-20 0 20 nan nan";
    zoom="1.0 nan nan nan nan";
    listfile=$trainname"_EAZ_20_nozoom_test_set.txt";
elif [[ "$kitlutconfiguration" == "kit-lut_EAZ_30_nozoom" ]]; then
    echo "Configuration: $kitlutconfiguration"
    elevation="-30 0 30 nan nan";
    azimuth="-30 0 30 nan nan";
    zoom="1.0 nan nan nan nan";
    listfile=$trainname"_EAZ_30_nozoom_test_set.txt";
elif [[ "$kitlutconfiguration" == "kit-lut_EAZ_40_nozoom" ]]; then
    echo "Configuration: $kitlutconfiguration"
    elevation="-40 0 40 nan nan";
    azimuth="-40 0 40 nan nan";
    zoom="1.0 nan nan nan nan";
    listfile=$trainname"_EAZ_40_nozoom_test_set.txt";
else
    echo "Not valid KIT-LUT configuration given!";
    return 1;
fi
    

printf "# Automatically generated by make_test_stereo_pairs.sh\n" 1>$listfile;
while read -r lline
do
    if [[ ! "$lline" == "#"* ]]; then # Skip comment lines
	line_ar=( $lline );
	# Print names of the generated files (directory not included)
	for el in $elevation; do
	    if [[ $el == "nan" ]]; then continue; fi;
	    for az in $azimuth; do
		if [[ "$az" == "nan" ]]; then continue; fi;
		for zo in $zoom; do
		    if [[ "$zo" == "nan" ]]; then continue; fi;
		    printf "${line_ar[2]}_render_cam_img_el_%4.2f_az_%4.2f_zo_%4.2f_left.png " $el $az $zo 1>>$listfile;
		    printf "${line_ar[2]}_render_cam_img_el_%4.2f_az_%4.2f_zo_%4.2f_right.png " $el $az $zo 1>>$listfile;
		    printf "${line_ar[2]}_render_cam_mat_el_%4.2f_az_%4.2f_zo_%4.2f_CoViS_canonic.dat " $el $az $zo 1>>$listfile;
		    printf "${line_ar[2]}_el_%4.2f_az_%4.2f_zo_%4.2f " $el $az $zo 1>>$listfile;
		    printf "${line_ar[2]} " 1>>$listfile;
		    printf "${line_ar[2]}_render_bbox_el_%4.2f_az_%4.2f_zo_%4.2f_vtk_left_camera_frame.dat\n" $el $az $zo 1>>$listfile;
		done;
	    done;
	done;
	# Really generate the files
	$render_bin \
	    --model ${line_ar[0]} --texture ${line_ar[1]} \
	    --view_mode 2 --bboutput $tempwork_dir/${line_ar[2]}_render_bbox.dat \
	    --distoutput $tempwork_dir/${line_ar[2]}_render_dist.dat \
	    --cam_mat_output $tempwork_dir/${line_ar[2]}_render_cam_mat.dat --cam_img_output $tempwork_dir/${line_ar[2]}_render_cam_img.png \
	    --genFile $tempwork/${line_ar[2]}_generated.dat \
	    --elevation $elevation --zoom $zoom --azimuth $azimuth 
    fi
done < $1

echo "Done - List of generated files (test set) output to $listfile";


